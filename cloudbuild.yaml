steps:
- name: gcr.io/facy-development/styler-git-checkout
  args: ['$_HEAD_REPO_URL', '$_HEAD_BRANCH']

- id: 'build-test-container'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/python-cloudbuild-tests', '--target', 'test-overlay', '.' ]

- id: 'run-pylint'
  name: 'gcr.io/$PROJECT_ID/python-cloudbuild-tests'
  entrypoint: 'bash'
  args: ['-c', '(pipenv run pylint **/*.py -r n --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" > pylint.log) || exit 0']
  waitFor: ['build-test-container']

- id: 'run-pytest'
  name: 'gcr.io/$PROJECT_ID/python-cloudbuild-tests'
  entrypoint: 'bash'
  args: ['-c', 'pipenv run coverage run --source=. --module pytest && pipenv run coverage xml']
  waitFor: ['build-test-container']

- id: 'sonarcloud-analysis'
  name: 'gcr.io/${PROJECT_ID}/sonar-scanner:latest'
  args:
    - '-Dsonar.organization=styler-inc'
    - '-Dsonar.projectKey=STYLER-Inc_gcloud-billing-analysis-tool'
    - '-Dsonar.sources=.'
    - '-Dsonar.host.url=https://sonarcloud.io'
    - '-Dsonar.login=55265562222489010940c4945586e6f6d80d2688'
    - '-Dsonar.python.pylint.reportPath=pylint.log'
    - '-Dsonar.python.coverage.reportPaths=coverage.xml'
    - '-Dsonar.pullrequest.key=$_PR_NUMBER'
  secretEnv: ['sonarcloudLogin']
  waitFor: ['build-sonar-scanner', 'run-pylint', 'run-pytest']

secrets:
- kmsKeyName: projects/facy-development/locations/global/keyRings/gcloud-billing-analysis-tool-build/cryptoKeys/sonarcloudLogin
  secretEnv:
    sonarcloudLogin: CiQA4VLMkJlznj/3dO1t3kGXthOFpCRBHRKN6CUHM+X6pz/eiMsSUgAf4zour3S+8fyyXpztYOAhtXaw+ggvkBWTK2g+GO+ovDVkTZ7wSbaKi5xKHKxd8krYzoZwwotODxVLAC3HpT0PQe7nOAEDv4f6opTUKCpMwgQ=